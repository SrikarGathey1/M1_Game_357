<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_unity__internals_8h_source" xml:lang="en-US">
<title>unity_internals.h</title>
<indexterm><primary>C:/Users/venka/Desktop/C_Project/3_Implementation/unity/unity_internals.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;==========================================</emphasis>
2 <emphasis role="comment">&#32;&#32;&#32;&#32;Unity&#32;Project&#32;-&#32;A&#32;Test&#32;Framework&#32;for&#32;C</emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;&#32;Copyright&#32;(c)&#32;2007-21&#32;Mike&#32;Karlesky,&#32;Mark&#32;VanderVoord,&#32;Greg&#32;Williams</emphasis>
4 <emphasis role="comment">&#32;&#32;&#32;&#32;[Released&#32;under&#32;MIT&#32;License.&#32;Please&#32;refer&#32;to&#32;license.txt&#32;for&#32;details]</emphasis>
5 <emphasis role="comment">==========================================&#32;*/</emphasis>
6 
7 <emphasis role="preprocessor">#ifndef&#32;UNITY_INTERNALS_H</emphasis>
8 <emphasis role="preprocessor">#define&#32;UNITY_INTERNALS_H</emphasis>
9 
10 <emphasis role="preprocessor">#ifdef&#32;UNITY_INCLUDE_CONFIG_H</emphasis>
11 <emphasis role="preprocessor">#include&#32;&quot;unity_config.h&quot;</emphasis>
12 <emphasis role="preprocessor">#endif</emphasis>
13 
14 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_SETJMP_H</emphasis>
15 <emphasis role="preprocessor">#include&#32;&lt;setjmp.h&gt;</emphasis>
16 <emphasis role="preprocessor">#endif</emphasis>
17 
18 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_MATH_H</emphasis>
19 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
20 <emphasis role="preprocessor">#endif</emphasis>
21 
22 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_STDDEF_H</emphasis>
23 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>
24 <emphasis role="preprocessor">#endif</emphasis>
25 
26 <emphasis role="preprocessor">#ifdef&#32;UNITY_INCLUDE_PRINT_FORMATTED</emphasis>
27 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
28 <emphasis role="preprocessor">#endif</emphasis>
29 
30 <emphasis role="comment">/*&#32;Unity&#32;Attempts&#32;to&#32;Auto-Detect&#32;Integer&#32;Types</emphasis>
31 <emphasis role="comment">&#32;*&#32;Attempt&#32;1:&#32;UINT_MAX,&#32;ULONG_MAX&#32;in&#32;&lt;limits.h&gt;,&#32;or&#32;default&#32;to&#32;32&#32;bits</emphasis>
32 <emphasis role="comment">&#32;*&#32;Attempt&#32;2:&#32;UINTPTR_MAX&#32;in&#32;&lt;stdint.h&gt;,&#32;or&#32;default&#32;to&#32;same&#32;size&#32;as&#32;long</emphasis>
33 <emphasis role="comment">&#32;*&#32;The&#32;user&#32;may&#32;override&#32;any&#32;of&#32;these&#32;derived&#32;constants:</emphasis>
34 <emphasis role="comment">&#32;*&#32;UNITY_INT_WIDTH,&#32;UNITY_LONG_WIDTH,&#32;UNITY_POINTER_WIDTH&#32;*/</emphasis>
35 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_STDINT_H</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
37 <emphasis role="preprocessor">#endif</emphasis>
38 
39 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_LIMITS_H</emphasis>
40 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>
41 <emphasis role="preprocessor">#endif</emphasis>
42 
43 <emphasis role="preprocessor">#if&#32;defined(__GNUC__)&#32;||&#32;defined(__clang__)</emphasis>
44 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_FUNCTION_ATTR(a)&#32;&#32;&#32;&#32;__attribute__((a))</emphasis>
45 <emphasis role="preprocessor">#else</emphasis>
46 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_FUNCTION_ATTR(a)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;ignore&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
47 <emphasis role="preprocessor">#endif</emphasis>
48 
49 <emphasis role="preprocessor">#ifndef&#32;UNITY_NORETURN</emphasis>
50 <emphasis role="preprocessor">&#32;&#32;#if&#32;defined(__cplusplus)</emphasis>
51 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
52 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_NORETURN&#32;[[&#32;noreturn&#32;]]</emphasis>
53 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
54 <emphasis role="preprocessor">&#32;&#32;#elif&#32;defined(__STDC_VERSION__)&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;=&#32;201112L</emphasis>
55 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&lt;stdnoreturn.h&gt;</emphasis>
56 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_NORETURN&#32;noreturn</emphasis>
57 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
58 <emphasis role="preprocessor">#endif</emphasis>
59 <emphasis role="preprocessor">#ifndef&#32;UNITY_NORETURN</emphasis>
60 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_NORETURN&#32;UNITY_FUNCTION_ATTR(noreturn)</emphasis>
61 <emphasis role="preprocessor">#endif</emphasis>
62 
63 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
64 <emphasis role="comment">&#32;*&#32;Guess&#32;Widths&#32;If&#32;Not&#32;Specified</emphasis>
65 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
66 
67 <emphasis role="comment">/*&#32;Determine&#32;the&#32;size&#32;of&#32;an&#32;int,&#32;if&#32;not&#32;already&#32;specified.</emphasis>
68 <emphasis role="comment">&#32;*&#32;We&#32;cannot&#32;use&#32;sizeof(int),&#32;because&#32;it&#32;is&#32;not&#32;yet&#32;defined</emphasis>
69 <emphasis role="comment">&#32;*&#32;at&#32;this&#32;stage&#32;in&#32;the&#32;translation&#32;of&#32;the&#32;C&#32;program.</emphasis>
70 <emphasis role="comment">&#32;*&#32;Also&#32;sizeof(int)&#32;does&#32;return&#32;the&#32;size&#32;in&#32;addressable&#32;units&#32;on&#32;all&#32;platforms,</emphasis>
71 <emphasis role="comment">&#32;*&#32;which&#32;may&#32;not&#32;necessarily&#32;be&#32;the&#32;size&#32;in&#32;bytes.</emphasis>
72 <emphasis role="comment">&#32;*&#32;Therefore,&#32;infer&#32;it&#32;from&#32;UINT_MAX&#32;if&#32;possible.&#32;*/</emphasis>
73 <emphasis role="preprocessor">#ifndef&#32;UNITY_INT_WIDTH</emphasis>
74 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;UINT_MAX</emphasis>
75 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(UINT_MAX&#32;==&#32;0xFFFF)</emphasis>
76 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_INT_WIDTH&#32;(16)</emphasis>
77 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;(UINT_MAX&#32;==&#32;0xFFFFFFFF)</emphasis>
78 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_INT_WIDTH&#32;(32)</emphasis>
79 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;(UINT_MAX&#32;==&#32;0xFFFFFFFFFFFFFFFF)</emphasis>
80 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_INT_WIDTH&#32;(64)</emphasis>
81 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
82 <emphasis role="preprocessor">&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;Set&#32;to&#32;default&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
83 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_INT_WIDTH&#32;(32)</emphasis>
84 <emphasis role="preprocessor">&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;UINT_MAX&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
85 <emphasis role="preprocessor">#endif</emphasis>
86 
87 <emphasis role="comment">/*&#32;Determine&#32;the&#32;size&#32;of&#32;a&#32;long,&#32;if&#32;not&#32;already&#32;specified.&#32;*/</emphasis>
88 <emphasis role="preprocessor">#ifndef&#32;UNITY_LONG_WIDTH</emphasis>
89 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;ULONG_MAX</emphasis>
90 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(ULONG_MAX&#32;==&#32;0xFFFF)</emphasis>
91 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_LONG_WIDTH&#32;(16)</emphasis>
92 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;(ULONG_MAX&#32;==&#32;0xFFFFFFFF)</emphasis>
93 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_LONG_WIDTH&#32;(32)</emphasis>
94 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;(ULONG_MAX&#32;==&#32;0xFFFFFFFFFFFFFFFF)</emphasis>
95 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_LONG_WIDTH&#32;(64)</emphasis>
96 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
97 <emphasis role="preprocessor">&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;Set&#32;to&#32;default&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
98 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_LONG_WIDTH&#32;(32)</emphasis>
99 <emphasis role="preprocessor">&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;ULONG_MAX&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
100 <emphasis role="preprocessor">#endif</emphasis>
101 
102 <emphasis role="comment">/*&#32;Determine&#32;the&#32;size&#32;of&#32;a&#32;pointer,&#32;if&#32;not&#32;already&#32;specified.&#32;*/</emphasis>
103 <emphasis role="preprocessor">#ifndef&#32;UNITY_POINTER_WIDTH</emphasis>
104 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;UINTPTR_MAX</emphasis>
105 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(UINTPTR_MAX&#32;&lt;=&#32;0xFFFF)</emphasis>
106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_POINTER_WIDTH&#32;(16)</emphasis>
107 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;(UINTPTR_MAX&#32;&lt;=&#32;0xFFFFFFFF)</emphasis>
108 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_POINTER_WIDTH&#32;(32)</emphasis>
109 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;(UINTPTR_MAX&#32;&lt;=&#32;0xFFFFFFFFFFFFFFFF)</emphasis>
110 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_POINTER_WIDTH&#32;(64)</emphasis>
111 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
112 <emphasis role="preprocessor">&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;Set&#32;to&#32;default&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
113 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_POINTER_WIDTH&#32;UNITY_LONG_WIDTH</emphasis>
114 <emphasis role="preprocessor">&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;UINTPTR_MAX&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
115 <emphasis role="preprocessor">#endif</emphasis>
116 
117 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
118 <emphasis role="comment">&#32;*&#32;Int&#32;Support&#32;(Define&#32;types&#32;based&#32;on&#32;detected&#32;sizes)</emphasis>
119 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
120 
121 <emphasis role="preprocessor">#if&#32;(UNITY_INT_WIDTH&#32;==&#32;32)</emphasis>
122 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;UNITY_UINT8;
123 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;UNITY_UINT16;
124 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;UNITY_UINT32;
125 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;UNITY_INT8;
126 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;&#32;&#32;UNITY_INT16;
127 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;UNITY_INT32;
128 <emphasis role="preprocessor">#elif&#32;(UNITY_INT_WIDTH&#32;==&#32;16)</emphasis>
129 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;UNITY_UINT8;
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;UNITY_UINT16;
131 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;UNITY_UINT32;
132 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;UNITY_INT8;
133 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;UNITY_INT16;
134 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;&#32;UNITY_INT32;
135 <emphasis role="preprocessor">#else</emphasis>
136 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#error&#32;Invalid&#32;UNITY_INT_WIDTH&#32;specified!&#32;(16&#32;or&#32;32&#32;are&#32;supported)</emphasis>
137 <emphasis role="preprocessor">#endif</emphasis>
138 
139 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
140 <emphasis role="comment">&#32;*&#32;64-bit&#32;Support</emphasis>
141 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
142 
143 <emphasis role="comment">/*&#32;Auto-detect&#32;64&#32;Bit&#32;Support&#32;*/</emphasis>
144 <emphasis role="preprocessor">#ifndef&#32;UNITY_SUPPORT_64</emphasis>
145 <emphasis role="preprocessor">&#32;&#32;#if&#32;UNITY_LONG_WIDTH&#32;==&#32;64&#32;||&#32;UNITY_POINTER_WIDTH&#32;==&#32;64</emphasis>
146 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_SUPPORT_64</emphasis>
147 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
148 <emphasis role="preprocessor">#endif</emphasis>
149 
150 <emphasis role="comment">/*&#32;64-Bit&#32;Support&#32;Dependent&#32;Configuration&#32;*/</emphasis>
151 <emphasis role="preprocessor">#ifndef&#32;UNITY_SUPPORT_64</emphasis>
152 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;No&#32;64-bit&#32;Support&#32;*/</emphasis>
153 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;UNITY_UINT32&#32;UNITY_UINT;
154 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;UNITY_INT32&#32;&#32;UNITY_INT;
155 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_MAX_NIBBLES&#32;(8)&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Maximum&#32;number&#32;of&#32;nibbles&#32;in&#32;a&#32;UNITY_(U)INT&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
156 <emphasis role="preprocessor">#else</emphasis>
157 &#32;&#32;<emphasis role="comment">/*&#32;64-bit&#32;Support&#32;*/</emphasis>
158 <emphasis role="preprocessor">&#32;&#32;#if&#32;(UNITY_LONG_WIDTH&#32;==&#32;32)</emphasis>
159 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;UNITY_UINT64;
160 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;UNITY_INT64;
161 <emphasis role="preprocessor">&#32;&#32;#elif&#32;(UNITY_LONG_WIDTH&#32;==&#32;64)</emphasis>
162 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;UNITY_UINT64;
163 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_INT64;
164 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
165 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#error&#32;Invalid&#32;UNITY_LONG_WIDTH&#32;specified!&#32;(32&#32;or&#32;64&#32;are&#32;supported)</emphasis>
166 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
167 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;UNITY_UINT64&#32;UNITY_UINT;
168 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;UNITY_INT64&#32;&#32;UNITY_INT;
169 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_MAX_NIBBLES&#32;(16)&#32;</emphasis><emphasis role="comment">/*&#32;Maximum&#32;number&#32;of&#32;nibbles&#32;in&#32;a&#32;UNITY_(U)INT&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
170 <emphasis role="preprocessor">#endif</emphasis>
171 
172 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
173 <emphasis role="comment">&#32;*&#32;Pointer&#32;Support</emphasis>
174 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
175 
176 <emphasis role="preprocessor">#if&#32;(UNITY_POINTER_WIDTH&#32;==&#32;32)</emphasis>
177 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_PTR_TO_INT&#32;UNITY_INT32</emphasis>
178 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_DISPLAY_STYLE_POINTER&#32;UNITY_DISPLAY_STYLE_HEX32</emphasis>
179 <emphasis role="preprocessor">#elif&#32;(UNITY_POINTER_WIDTH&#32;==&#32;64)</emphasis>
180 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_PTR_TO_INT&#32;UNITY_INT64</emphasis>
181 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_DISPLAY_STYLE_POINTER&#32;UNITY_DISPLAY_STYLE_HEX64</emphasis>
182 <emphasis role="preprocessor">#elif&#32;(UNITY_POINTER_WIDTH&#32;==&#32;16)</emphasis>
183 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_PTR_TO_INT&#32;UNITY_INT16</emphasis>
184 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_DISPLAY_STYLE_POINTER&#32;UNITY_DISPLAY_STYLE_HEX16</emphasis>
185 <emphasis role="preprocessor">#else</emphasis>
186 <emphasis role="preprocessor">&#32;&#32;#error&#32;Invalid&#32;UNITY_POINTER_WIDTH&#32;specified!&#32;(16,&#32;32&#32;or&#32;64&#32;are&#32;supported)</emphasis>
187 <emphasis role="preprocessor">#endif</emphasis>
188 
189 <emphasis role="preprocessor">#ifndef&#32;UNITY_PTR_ATTRIBUTE</emphasis>
190 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_PTR_ATTRIBUTE</emphasis>
191 <emphasis role="preprocessor">#endif</emphasis>
192 
193 <emphasis role="preprocessor">#ifndef&#32;UNITY_INTERNAL_PTR</emphasis>
194 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_INTERNAL_PTR&#32;UNITY_PTR_ATTRIBUTE&#32;const&#32;void*</emphasis>
195 <emphasis role="preprocessor">#endif</emphasis>
196 
197 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
198 <emphasis role="comment">&#32;*&#32;Float&#32;Support</emphasis>
199 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
200 
201 <emphasis role="preprocessor">#ifdef&#32;UNITY_EXCLUDE_FLOAT</emphasis>
202 
203 <emphasis role="comment">/*&#32;No&#32;Floating&#32;Point&#32;Support&#32;*/</emphasis>
204 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_DOUBLE</emphasis>
205 <emphasis role="preprocessor">#define&#32;UNITY_EXCLUDE_DOUBLE&#32;</emphasis><emphasis role="comment">/*&#32;Remove&#32;double&#32;when&#32;excluding&#32;float&#32;support&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
206 <emphasis role="preprocessor">#endif</emphasis>
207 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_FLOAT_PRINT</emphasis>
208 <emphasis role="preprocessor">#define&#32;UNITY_EXCLUDE_FLOAT_PRINT</emphasis>
209 <emphasis role="preprocessor">#endif</emphasis>
210 
211 <emphasis role="preprocessor">#else</emphasis>
212 
213 <emphasis role="comment">/*&#32;Floating&#32;Point&#32;Support&#32;*/</emphasis>
214 <emphasis role="preprocessor">#ifndef&#32;UNITY_FLOAT_PRECISION</emphasis>
215 <emphasis role="preprocessor">#define&#32;UNITY_FLOAT_PRECISION&#32;(0.00001f)</emphasis>
216 <emphasis role="preprocessor">#endif</emphasis>
217 <emphasis role="preprocessor">#ifndef&#32;UNITY_FLOAT_TYPE</emphasis>
218 <emphasis role="preprocessor">#define&#32;UNITY_FLOAT_TYPE&#32;float</emphasis>
219 <emphasis role="preprocessor">#endif</emphasis>
220 <emphasis role="keyword">typedef</emphasis>&#32;UNITY_FLOAT_TYPE&#32;UNITY_FLOAT;
221 
222 <emphasis role="comment">/*&#32;isinf&#32;&amp;&#32;isnan&#32;macros&#32;should&#32;be&#32;provided&#32;by&#32;math.h&#32;*/</emphasis>
223 <emphasis role="preprocessor">#ifndef&#32;isinf</emphasis>
224 <emphasis role="comment">/*&#32;The&#32;value&#32;of&#32;Inf&#32;-&#32;Inf&#32;is&#32;NaN&#32;*/</emphasis>
225 <emphasis role="preprocessor">#define&#32;isinf(n)&#32;(isnan((n)&#32;-&#32;(n))&#32;&amp;&amp;&#32;!isnan(n))</emphasis>
226 <emphasis role="preprocessor">#endif</emphasis>
227 
228 <emphasis role="preprocessor">#ifndef&#32;isnan</emphasis>
229 <emphasis role="comment">/*&#32;NaN&#32;is&#32;the&#32;only&#32;floating&#32;point&#32;value&#32;that&#32;does&#32;NOT&#32;equal&#32;itself.</emphasis>
230 <emphasis role="comment">&#32;*&#32;Therefore&#32;if&#32;n&#32;!=&#32;n,&#32;then&#32;it&#32;is&#32;NaN.&#32;*/</emphasis>
231 <emphasis role="preprocessor">#define&#32;isnan(n)&#32;((n&#32;!=&#32;n)&#32;?&#32;1&#32;:&#32;0)</emphasis>
232 <emphasis role="preprocessor">#endif</emphasis>
233 
234 <emphasis role="preprocessor">#endif</emphasis>
235 
236 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
237 <emphasis role="comment">&#32;*&#32;Double&#32;Float&#32;Support</emphasis>
238 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
239 
240 <emphasis role="comment">/*&#32;unlike&#32;float,&#32;we&#32;DON&apos;T&#32;include&#32;by&#32;default&#32;*/</emphasis>
241 <emphasis role="preprocessor">#if&#32;defined(UNITY_EXCLUDE_DOUBLE)&#32;||&#32;!defined(UNITY_INCLUDE_DOUBLE)</emphasis>
242 
243 &#32;&#32;<emphasis role="comment">/*&#32;No&#32;Floating&#32;Point&#32;Support&#32;*/</emphasis>
244 <emphasis role="preprocessor">&#32;&#32;#ifndef&#32;UNITY_EXCLUDE_DOUBLE</emphasis>
245 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_EXCLUDE_DOUBLE</emphasis>
246 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
247 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#undef&#32;UNITY_INCLUDE_DOUBLE</emphasis>
248 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
249 
250 <emphasis role="preprocessor">&#32;&#32;#ifndef&#32;UNITY_EXCLUDE_FLOAT</emphasis>
251 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifndef&#32;UNITY_DOUBLE_TYPE</emphasis>
252 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_DOUBLE_TYPE&#32;double</emphasis>
253 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
254 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;UNITY_FLOAT&#32;UNITY_DOUBLE;
255 &#32;&#32;<emphasis role="comment">/*&#32;For&#32;parameter&#32;in&#32;UnityPrintFloat(UNITY_DOUBLE),&#32;which&#32;aliases&#32;to&#32;double&#32;or&#32;float&#32;*/</emphasis>
256 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
257 
258 <emphasis role="preprocessor">#else</emphasis>
259 
260 &#32;&#32;<emphasis role="comment">/*&#32;Double&#32;Floating&#32;Point&#32;Support&#32;*/</emphasis>
261 <emphasis role="preprocessor">&#32;&#32;#ifndef&#32;UNITY_DOUBLE_PRECISION</emphasis>
262 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_DOUBLE_PRECISION&#32;(1e-12)</emphasis>
263 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
264 
265 <emphasis role="preprocessor">&#32;&#32;#ifndef&#32;UNITY_DOUBLE_TYPE</emphasis>
266 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_DOUBLE_TYPE&#32;double</emphasis>
267 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
268 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;UNITY_DOUBLE_TYPE&#32;UNITY_DOUBLE;
269 
270 <emphasis role="preprocessor">#endif</emphasis>
271 
272 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
273 <emphasis role="comment">&#32;*&#32;Output&#32;Method:&#32;stdout&#32;(DEFAULT)</emphasis>
274 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
275 <emphasis role="preprocessor">#ifndef&#32;UNITY_OUTPUT_CHAR</emphasis>
276 &#32;&#32;<emphasis role="comment">/*&#32;Default&#32;to&#32;using&#32;putchar,&#32;which&#32;is&#32;defined&#32;in&#32;stdio.h&#32;*/</emphasis>
277 <emphasis role="preprocessor">&#32;&#32;#include&#32;&lt;stdio.h&gt;</emphasis>
278 <emphasis role="preprocessor">&#32;&#32;#define&#32;UNITY_OUTPUT_CHAR(a)&#32;(void)putchar(a)</emphasis>
279 <emphasis role="preprocessor">#else</emphasis>
280 &#32;&#32;<emphasis role="comment">/*&#32;If&#32;defined&#32;as&#32;something&#32;else,&#32;make&#32;sure&#32;we&#32;declare&#32;it&#32;here&#32;so&#32;it&apos;s&#32;ready&#32;for&#32;use&#32;*/</emphasis>
281 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;UNITY_OUTPUT_CHAR_HEADER_DECLARATION</emphasis>
282 &#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UNITY_OUTPUT_CHAR_HEADER_DECLARATION;
283 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
284 <emphasis role="preprocessor">#endif</emphasis>
285 
286 <emphasis role="preprocessor">#ifndef&#32;UNITY_OUTPUT_FLUSH</emphasis>
287 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;UNITY_USE_FLUSH_STDOUT</emphasis>
288 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;want&#32;to&#32;use&#32;the&#32;stdout&#32;flush&#32;utility&#32;*/</emphasis>
289 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&lt;stdio.h&gt;</emphasis>
290 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_OUTPUT_FLUSH()&#32;(void)fflush(stdout)</emphasis>
291 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
292 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&apos;ve&#32;specified&#32;nothing,&#32;therefore&#32;flush&#32;should&#32;just&#32;be&#32;ignored&#32;*/</emphasis>
293 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;UNITY_OUTPUT_FLUSH()</emphasis>
294 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
295 <emphasis role="preprocessor">#else</emphasis>
296 &#32;&#32;<emphasis role="comment">/*&#32;If&#32;defined&#32;as&#32;something&#32;else,&#32;make&#32;sure&#32;we&#32;declare&#32;it&#32;here&#32;so&#32;it&apos;s&#32;ready&#32;for&#32;use&#32;*/</emphasis>
297 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;UNITY_OUTPUT_FLUSH_HEADER_DECLARATION</emphasis>
298 &#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UNITY_OUTPUT_FLUSH_HEADER_DECLARATION;
299 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
300 <emphasis role="preprocessor">#endif</emphasis>
301 
302 <emphasis role="preprocessor">#ifndef&#32;UNITY_OUTPUT_FLUSH</emphasis>
303 <emphasis role="preprocessor">#define&#32;UNITY_FLUSH_CALL()</emphasis>
304 <emphasis role="preprocessor">#else</emphasis>
305 <emphasis role="preprocessor">#define&#32;UNITY_FLUSH_CALL()&#32;UNITY_OUTPUT_FLUSH()</emphasis>
306 <emphasis role="preprocessor">#endif</emphasis>
307 
308 <emphasis role="preprocessor">#ifndef&#32;UNITY_PRINT_EOL</emphasis>
309 <emphasis role="preprocessor">#define&#32;UNITY_PRINT_EOL()&#32;&#32;&#32;&#32;UNITY_OUTPUT_CHAR(&apos;\n&apos;)</emphasis>
310 <emphasis role="preprocessor">#endif</emphasis>
311 
312 <emphasis role="preprocessor">#ifndef&#32;UNITY_OUTPUT_START</emphasis>
313 <emphasis role="preprocessor">#define&#32;UNITY_OUTPUT_START()</emphasis>
314 <emphasis role="preprocessor">#endif</emphasis>
315 
316 <emphasis role="preprocessor">#ifndef&#32;UNITY_OUTPUT_COMPLETE</emphasis>
317 <emphasis role="preprocessor">#define&#32;UNITY_OUTPUT_COMPLETE()</emphasis>
318 <emphasis role="preprocessor">#endif</emphasis>
319 
320 <emphasis role="preprocessor">#ifdef&#32;UNITY_INCLUDE_EXEC_TIME</emphasis>
321 <emphasis role="preprocessor">&#32;&#32;#if&#32;!defined(UNITY_EXEC_TIME_START)&#32;&amp;&amp;&#32;\</emphasis>
322 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;!defined(UNITY_EXEC_TIME_STOP)&#32;&amp;&amp;&#32;\</emphasis>
323 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;!defined(UNITY_PRINT_EXEC_TIME)&#32;&amp;&amp;&#32;\</emphasis>
324 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;!defined(UNITY_TIME_TYPE)</emphasis>
325 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;none&#32;any&#32;of&#32;these&#32;macros&#32;are&#32;defined&#32;then&#32;try&#32;to&#32;provide&#32;a&#32;default&#32;implementation&#32;*/</emphasis>
326 
327 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(UNITY_CLOCK_MS)</emphasis>
328 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;is&#32;a&#32;simple&#32;way&#32;to&#32;get&#32;a&#32;default&#32;implementation&#32;on&#32;platforms&#32;that&#32;support&#32;getting&#32;a&#32;millisecond&#32;counter&#32;*/</emphasis>
329 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_TIME_TYPE&#32;UNITY_UINT</emphasis>
330 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_EXEC_TIME_START()&#32;Unity.CurrentTestStartTime&#32;=&#32;UNITY_CLOCK_MS()</emphasis>
331 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_EXEC_TIME_STOP()&#32;Unity.CurrentTestStopTime&#32;=&#32;UNITY_CLOCK_MS()</emphasis>
332 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_PRINT_EXEC_TIME()&#32;{&#32;\</emphasis>
333 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_UINT&#32;execTimeMs&#32;=&#32;(Unity.CurrentTestStopTime&#32;-&#32;Unity.CurrentTestStartTime);&#32;\</emphasis>
334 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrint(&quot;&#32;(&quot;</emphasis>);&#32;\
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrintNumberUnsigned(execTimeMs);&#32;\
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrint(&quot;&#32;ms)&quot;);&#32;\
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
338 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;defined(_WIN32)</emphasis>
339 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#include&#32;&lt;time.h&gt;</emphasis>
340 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_TIME_TYPE&#32;clock_t</emphasis>
341 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_GET_TIME(t)&#32;t&#32;=&#32;(clock_t)((clock()&#32;*&#32;1000)&#32;/&#32;CLOCKS_PER_SEC)</emphasis>
342 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_EXEC_TIME_START()&#32;UNITY_GET_TIME(Unity.CurrentTestStartTime)</emphasis>
343 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_EXEC_TIME_STOP()&#32;UNITY_GET_TIME(Unity.CurrentTestStopTime)</emphasis>
344 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_PRINT_EXEC_TIME()&#32;{&#32;\</emphasis>
345 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_UINT&#32;execTimeMs&#32;=&#32;(Unity.CurrentTestStopTime&#32;-&#32;Unity.CurrentTestStartTime);&#32;\</emphasis>
346 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrint(&quot;&#32;(&quot;</emphasis>);&#32;\
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrintNumberUnsigned(execTimeMs);&#32;\
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrint(&quot;&#32;ms)&quot;);&#32;\
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
350 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif&#32;defined(__unix__)&#32;||&#32;defined(__APPLE__)</emphasis>
351 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#include&#32;&lt;time.h&gt;</emphasis>
352 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_TIME_TYPE&#32;struct&#32;timespec</emphasis>
353 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_GET_TIME(t)&#32;clock_gettime(CLOCK_MONOTONIC,&#32;&amp;t)</emphasis>
354 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_EXEC_TIME_START()&#32;UNITY_GET_TIME(Unity.CurrentTestStartTime)</emphasis>
355 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_EXEC_TIME_STOP()&#32;UNITY_GET_TIME(Unity.CurrentTestStopTime)</emphasis>
356 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;UNITY_PRINT_EXEC_TIME()&#32;{&#32;\</emphasis>
357 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_UINT&#32;execTimeMs&#32;=&#32;((Unity.CurrentTestStopTime.tv_sec&#32;-&#32;Unity.CurrentTestStartTime.tv_sec)&#32;*&#32;1000L);&#32;\</emphasis>
358 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;execTimeMs&#32;+=&#32;((Unity.CurrentTestStopTime.tv_nsec&#32;-&#32;Unity.CurrentTestStartTime.tv_nsec)&#32;/&#32;1000000L);&#32;\</emphasis>
359 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrint(&quot;&#32;(&quot;</emphasis>);&#32;\
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrintNumberUnsigned(execTimeMs);&#32;\
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityPrint(&quot;&#32;ms)&quot;);&#32;\
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
363 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
364 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
365 <emphasis role="preprocessor">#endif</emphasis>
366 
367 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXEC_TIME_START</emphasis>
368 <emphasis role="preprocessor">#define&#32;UNITY_EXEC_TIME_START()&#32;do{}while(0)</emphasis>
369 <emphasis role="preprocessor">#endif</emphasis>
370 
371 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXEC_TIME_STOP</emphasis>
372 <emphasis role="preprocessor">#define&#32;UNITY_EXEC_TIME_STOP()&#32;do{}while(0)</emphasis>
373 <emphasis role="preprocessor">#endif</emphasis>
374 
375 <emphasis role="preprocessor">#ifndef&#32;UNITY_TIME_TYPE</emphasis>
376 <emphasis role="preprocessor">#define&#32;UNITY_TIME_TYPE&#32;UNITY_UINT</emphasis>
377 <emphasis role="preprocessor">#endif</emphasis>
378 
379 <emphasis role="preprocessor">#ifndef&#32;UNITY_PRINT_EXEC_TIME</emphasis>
380 <emphasis role="preprocessor">#define&#32;UNITY_PRINT_EXEC_TIME()&#32;do{}while(0)</emphasis>
381 <emphasis role="preprocessor">#endif</emphasis>
382 
383 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
384 <emphasis role="comment">&#32;*&#32;Footprint</emphasis>
385 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
386 
387 <emphasis role="preprocessor">#ifndef&#32;UNITY_LINE_TYPE</emphasis>
388 <emphasis role="preprocessor">#define&#32;UNITY_LINE_TYPE&#32;UNITY_UINT</emphasis>
389 <emphasis role="preprocessor">#endif</emphasis>
390 
391 <emphasis role="preprocessor">#ifndef&#32;UNITY_COUNTER_TYPE</emphasis>
392 <emphasis role="preprocessor">#define&#32;UNITY_COUNTER_TYPE&#32;UNITY_UINT</emphasis>
393 <emphasis role="preprocessor">#endif</emphasis>
394 
395 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
396 <emphasis role="comment">&#32;*&#32;Internal&#32;Structs&#32;Needed</emphasis>
397 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
398 
399 <emphasis role="keyword">typedef</emphasis>&#32;void&#32;(*UnityTestFunction)(void);
400 
401 <emphasis role="preprocessor">#define&#32;UNITY_DISPLAY_RANGE_INT&#32;&#32;(0x10)</emphasis>
402 <emphasis role="preprocessor">#define&#32;UNITY_DISPLAY_RANGE_UINT&#32;(0x20)</emphasis>
403 <emphasis role="preprocessor">#define&#32;UNITY_DISPLAY_RANGE_HEX&#32;&#32;(0x40)</emphasis>
404 <emphasis role="preprocessor">#define&#32;UNITY_DISPLAY_RANGE_CHAR&#32;(0x80)</emphasis>
405 
406 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
407 {
408 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_INT&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(UNITY_INT_WIDTH&#32;/&#32;8)&#32;+&#32;UNITY_DISPLAY_RANGE_INT,
409 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_INT8&#32;&#32;&#32;&#32;&#32;=&#32;1&#32;+&#32;UNITY_DISPLAY_RANGE_INT,
410 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_INT16&#32;&#32;&#32;&#32;=&#32;2&#32;+&#32;UNITY_DISPLAY_RANGE_INT,
411 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_INT32&#32;&#32;&#32;&#32;=&#32;4&#32;+&#32;UNITY_DISPLAY_RANGE_INT,
412 #ifdef&#32;UNITY_SUPPORT_64
413 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_INT64&#32;&#32;&#32;&#32;=&#32;8&#32;+&#32;UNITY_DISPLAY_RANGE_INT,
414 #endif
415 
416 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_UINT&#32;&#32;&#32;&#32;&#32;=&#32;(UNITY_INT_WIDTH&#32;/&#32;8)&#32;+&#32;UNITY_DISPLAY_RANGE_UINT,
417 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_UINT8&#32;&#32;&#32;&#32;=&#32;1&#32;+&#32;UNITY_DISPLAY_RANGE_UINT,
418 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_UINT16&#32;&#32;&#32;=&#32;2&#32;+&#32;UNITY_DISPLAY_RANGE_UINT,
419 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_UINT32&#32;&#32;&#32;=&#32;4&#32;+&#32;UNITY_DISPLAY_RANGE_UINT,
420 <emphasis role="preprocessor">#ifdef&#32;UNITY_SUPPORT_64</emphasis>
421 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_UINT64&#32;&#32;&#32;=&#32;8&#32;+&#32;UNITY_DISPLAY_RANGE_UINT,
422 <emphasis role="preprocessor">#endif</emphasis>
423 
424 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_HEX8&#32;&#32;&#32;&#32;&#32;=&#32;1&#32;+&#32;UNITY_DISPLAY_RANGE_HEX,
425 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_HEX16&#32;&#32;&#32;&#32;=&#32;2&#32;+&#32;UNITY_DISPLAY_RANGE_HEX,
426 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_HEX32&#32;&#32;&#32;&#32;=&#32;4&#32;+&#32;UNITY_DISPLAY_RANGE_HEX,
427 <emphasis role="preprocessor">#ifdef&#32;UNITY_SUPPORT_64</emphasis>
428 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_HEX64&#32;&#32;&#32;&#32;=&#32;8&#32;+&#32;UNITY_DISPLAY_RANGE_HEX,
429 <emphasis role="preprocessor">#endif</emphasis>
430 
431 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_CHAR&#32;&#32;&#32;&#32;&#32;=&#32;1&#32;+&#32;UNITY_DISPLAY_RANGE_CHAR&#32;+&#32;UNITY_DISPLAY_RANGE_INT,
432 
433 &#32;&#32;&#32;&#32;UNITY_DISPLAY_STYLE_UNKNOWN
434 }&#32;UNITY_DISPLAY_STYLE_T;
435 
436 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
437 {
438 &#32;&#32;&#32;&#32;UNITY_WITHIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0,
439 &#32;&#32;&#32;&#32;UNITY_EQUAL_TO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x1,
440 &#32;&#32;&#32;&#32;UNITY_GREATER_THAN&#32;&#32;&#32;&#32;&#32;=&#32;0x2,
441 &#32;&#32;&#32;&#32;UNITY_GREATER_OR_EQUAL&#32;=&#32;0x2&#32;+&#32;UNITY_EQUAL_TO,
442 &#32;&#32;&#32;&#32;UNITY_SMALLER_THAN&#32;&#32;&#32;&#32;&#32;=&#32;0x4,
443 &#32;&#32;&#32;&#32;UNITY_SMALLER_OR_EQUAL&#32;=&#32;0x4&#32;+&#32;UNITY_EQUAL_TO,
444 &#32;&#32;&#32;&#32;UNITY_NOT_EQUAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0,
445 &#32;&#32;&#32;&#32;UNITY_UNKNOWN
446 }&#32;UNITY_COMPARISON_T;
447 
448 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_FLOAT</emphasis>
449 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;UNITY_FLOAT_TRAIT
450 {
451 &#32;&#32;&#32;&#32;UNITY_FLOAT_IS_NOT_INF&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0,
452 &#32;&#32;&#32;&#32;UNITY_FLOAT_IS_INF,
453 &#32;&#32;&#32;&#32;UNITY_FLOAT_IS_NOT_NEG_INF,
454 &#32;&#32;&#32;&#32;UNITY_FLOAT_IS_NEG_INF,
455 &#32;&#32;&#32;&#32;UNITY_FLOAT_IS_NOT_NAN,
456 &#32;&#32;&#32;&#32;UNITY_FLOAT_IS_NAN,
457 &#32;&#32;&#32;&#32;UNITY_FLOAT_IS_NOT_DET,
458 &#32;&#32;&#32;&#32;UNITY_FLOAT_IS_DET,
459 &#32;&#32;&#32;&#32;UNITY_FLOAT_INVALID_TRAIT
460 }&#32;UNITY_FLOAT_TRAIT_T;
461 <emphasis role="preprocessor">#endif</emphasis>
462 
463 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
464 {
465 &#32;&#32;&#32;&#32;UNITY_ARRAY_TO_VAL&#32;=&#32;0,
466 &#32;&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY,
467 &#32;&#32;&#32;&#32;UNITY_ARRAY_UNKNOWN
468 }&#32;UNITY_FLAGS_T;
469 
470 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_n_i_t_y___s_t_o_r_a_g_e___t">UNITY_STORAGE_T</link>
471 {
472 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;TestFile;
473 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;CurrentTestName;
474 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_DETAILS</emphasis>
475 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;CurrentDetail1;
476 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;CurrentDetail2;
477 <emphasis role="preprocessor">#endif</emphasis>
478 &#32;&#32;&#32;&#32;UNITY_LINE_TYPE&#32;CurrentTestLineNumber;
479 &#32;&#32;&#32;&#32;UNITY_COUNTER_TYPE&#32;NumberOfTests;
480 &#32;&#32;&#32;&#32;UNITY_COUNTER_TYPE&#32;TestFailures;
481 &#32;&#32;&#32;&#32;UNITY_COUNTER_TYPE&#32;TestIgnores;
482 &#32;&#32;&#32;&#32;UNITY_COUNTER_TYPE&#32;CurrentTestFailed;
483 &#32;&#32;&#32;&#32;UNITY_COUNTER_TYPE&#32;CurrentTestIgnored;
484 <emphasis role="preprocessor">#ifdef&#32;UNITY_INCLUDE_EXEC_TIME</emphasis>
485 &#32;&#32;&#32;&#32;UNITY_TIME_TYPE&#32;CurrentTestStartTime;
486 &#32;&#32;&#32;&#32;UNITY_TIME_TYPE&#32;CurrentTestStopTime;
487 <emphasis role="preprocessor">#endif</emphasis>
488 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_SETJMP_H</emphasis>
489 &#32;&#32;&#32;&#32;jmp_buf&#32;AbortFrame;
490 <emphasis role="preprocessor">#endif</emphasis>
491 };
492 
493 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_n_i_t_y___s_t_o_r_a_g_e___t">UNITY_STORAGE_T</link>&#32;Unity;
494 
495 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
496 <emphasis role="comment">&#32;*&#32;Test&#32;Suite&#32;Management</emphasis>
497 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
498 
499 <emphasis role="keywordtype">void</emphasis>&#32;UnityBegin(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filename);
500 <emphasis role="keywordtype">int</emphasis>&#32;&#32;UnityEnd(<emphasis role="keywordtype">void</emphasis>);
501 <emphasis role="keywordtype">void</emphasis>&#32;UnitySetTestFile(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filename);
502 <emphasis role="keywordtype">void</emphasis>&#32;UnityConcludeTest(<emphasis role="keywordtype">void</emphasis>);
503 
504 <emphasis role="preprocessor">#ifndef&#32;RUN_TEST</emphasis>
505 <emphasis role="keywordtype">void</emphasis>&#32;UnityDefaultTestRun(UnityTestFunction&#32;Func,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;FuncName,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;FuncLineNum);
506 <emphasis role="preprocessor">#else</emphasis>
507 <emphasis role="preprocessor">#define&#32;UNITY_SKIP_DEFAULT_RUNNER</emphasis>
508 <emphasis role="preprocessor">#endif</emphasis>
509 
510 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
511 <emphasis role="comment">&#32;*&#32;Details&#32;Support</emphasis>
512 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
513 
514 <emphasis role="preprocessor">#ifdef&#32;UNITY_EXCLUDE_DETAILS</emphasis>
515 <emphasis role="preprocessor">#define&#32;UNITY_CLR_DETAILS()</emphasis>
516 <emphasis role="preprocessor">#define&#32;UNITY_SET_DETAIL(d1)</emphasis>
517 <emphasis role="preprocessor">#define&#32;UNITY_SET_DETAILS(d1,d2)</emphasis>
518 <emphasis role="preprocessor">#else</emphasis>
519 <emphasis role="preprocessor">#define&#32;UNITY_CLR_DETAILS()&#32;&#32;&#32;&#32;&#32;&#32;{&#32;Unity.CurrentDetail1&#32;=&#32;0;&#32;&#32;&#32;Unity.CurrentDetail2&#32;=&#32;0;&#32;&#32;}</emphasis>
520 <emphasis role="preprocessor">#define&#32;UNITY_SET_DETAIL(d1)&#32;&#32;&#32;&#32;&#32;{&#32;Unity.CurrentDetail1&#32;=&#32;(d1);&#32;&#32;Unity.CurrentDetail2&#32;=&#32;0;&#32;&#32;}</emphasis>
521 <emphasis role="preprocessor">#define&#32;UNITY_SET_DETAILS(d1,d2)&#32;{&#32;Unity.CurrentDetail1&#32;=&#32;(d1);&#32;&#32;Unity.CurrentDetail2&#32;=&#32;(d2);&#32;}</emphasis>
522 
523 <emphasis role="preprocessor">#ifndef&#32;UNITY_DETAIL1_NAME</emphasis>
524 <emphasis role="preprocessor">#define&#32;UNITY_DETAIL1_NAME&#32;&quot;Function&quot;</emphasis>
525 <emphasis role="preprocessor">#endif</emphasis>
526 
527 <emphasis role="preprocessor">#ifndef&#32;UNITY_DETAIL2_NAME</emphasis>
528 <emphasis role="preprocessor">#define&#32;UNITY_DETAIL2_NAME&#32;&quot;Argument&quot;</emphasis>
529 <emphasis role="preprocessor">#endif</emphasis>
530 <emphasis role="preprocessor">#endif</emphasis>
531 
532 <emphasis role="preprocessor">#ifdef&#32;UNITY_PRINT_TEST_CONTEXT</emphasis>
533 <emphasis role="keywordtype">void</emphasis>&#32;UNITY_PRINT_TEST_CONTEXT(<emphasis role="keywordtype">void</emphasis>);
534 <emphasis role="preprocessor">#endif</emphasis>
535 
536 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
537 <emphasis role="comment">&#32;*&#32;Test&#32;Output</emphasis>
538 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
539 
540 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrint(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<emphasis role="keywordtype">string</emphasis>);
541 
542 <emphasis role="preprocessor">#ifdef&#32;UNITY_INCLUDE_PRINT_FORMATTED</emphasis>
543 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrintF(<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;line,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;format,&#32;...);
544 <emphasis role="preprocessor">#endif</emphasis>
545 
546 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrintLen(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<emphasis role="keywordtype">string</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;length);
547 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrintMask(<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT&#32;mask,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT&#32;number);
548 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrintNumberByStyle(<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;number,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DISPLAY_STYLE_T&#32;style);
549 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrintNumber(<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;number_to_print);
550 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrintNumberUnsigned(<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT&#32;number);
551 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrintNumberHex(<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT&#32;number,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;nibbles_to_print);
552 
553 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_FLOAT_PRINT</emphasis>
554 <emphasis role="keywordtype">void</emphasis>&#32;UnityPrintFloat(<emphasis role="keyword">const</emphasis>&#32;UNITY_DOUBLE&#32;input_number);
555 <emphasis role="preprocessor">#endif</emphasis>
556 
557 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
558 <emphasis role="comment">&#32;*&#32;Test&#32;Assertion&#32;Functions</emphasis>
559 <emphasis role="comment">&#32;*-------------------------------------------------------</emphasis>
560 <emphasis role="comment">&#32;*&#32;&#32;Use&#32;the&#32;macros&#32;below&#32;this&#32;section&#32;instead&#32;of&#32;calling</emphasis>
561 <emphasis role="comment">&#32;*&#32;&#32;these&#32;directly.&#32;The&#32;macros&#32;have&#32;a&#32;consistent&#32;naming</emphasis>
562 <emphasis role="comment">&#32;*&#32;&#32;convention&#32;and&#32;will&#32;pull&#32;in&#32;file&#32;and&#32;line&#32;information</emphasis>
563 <emphasis role="comment">&#32;*&#32;&#32;for&#32;you.&#32;*/</emphasis>
564 
565 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertEqualNumber(<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;expected,
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;actual,
567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DISPLAY_STYLE_T&#32;style);
570 
571 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertGreaterOrLessOrEqualNumber(<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;threshold,
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;actual,
573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_COMPARISON_T&#32;compare,
574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*msg,
575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DISPLAY_STYLE_T&#32;style);
577 
578 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertEqualIntArray(UNITY_INTERNAL_PTR&#32;expected,
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_INTERNAL_PTR&#32;actual,
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;num_elements,
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DISPLAY_STYLE_T&#32;style,
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLAGS_T&#32;flags);
585 
586 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertBits(<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;mask,
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;expected,
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;actual,
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber);
591 
592 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertEqualString(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;expected,
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;actual,
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber);
596 
597 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertEqualStringLen(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;expected,
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;actual,
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;length,
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber);
602 
603 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertEqualStringArray(&#32;UNITY_INTERNAL_PTR&#32;expected,
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>**&#32;actual,
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;num_elements,
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLAGS_T&#32;flags);
609 
610 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertEqualMemory(&#32;UNITY_INTERNAL_PTR&#32;expected,
611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_INTERNAL_PTR&#32;actual,
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;length,
613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;num_elements,
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLAGS_T&#32;flags);
617 
618 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertNumbersWithin(<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT&#32;delta,
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;expected,
620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;actual,
621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DISPLAY_STYLE_T&#32;style);
624 
625 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertNumbersArrayWithin(<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT&#32;delta,
626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_INTERNAL_PTR&#32;expected,
627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_INTERNAL_PTR&#32;actual,
628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;num_elements,
629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DISPLAY_STYLE_T&#32;style,
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLAGS_T&#32;flags);
633 
634 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_SETJMP_H</emphasis>
635 UNITY_NORETURN&#32;<emphasis role="keywordtype">void</emphasis>&#32;UnityFail(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;message,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;line);
636 UNITY_NORETURN&#32;<emphasis role="keywordtype">void</emphasis>&#32;UnityIgnore(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;message,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;line);
637 <emphasis role="preprocessor">#else</emphasis>
638 <emphasis role="keywordtype">void</emphasis>&#32;UnityFail(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;message,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;line);
639 <emphasis role="keywordtype">void</emphasis>&#32;UnityIgnore(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;message,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;line);
640 <emphasis role="preprocessor">#endif</emphasis>
641 
642 <emphasis role="keywordtype">void</emphasis>&#32;UnityMessage(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;message,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;line);
643 
644 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_FLOAT</emphasis>
645 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertFloatsWithin(<emphasis role="keyword">const</emphasis>&#32;UNITY_FLOAT&#32;delta,
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLOAT&#32;expected,
647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLOAT&#32;actual,
648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber);
650 
651 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertEqualFloatArray(UNITY_PTR_ATTRIBUTE&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLOAT*&#32;expected,
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_PTR_ATTRIBUTE&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLOAT*&#32;actual,
653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;num_elements,
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLAGS_T&#32;flags);
657 
658 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertFloatSpecial(<emphasis role="keyword">const</emphasis>&#32;UNITY_FLOAT&#32;actual,
659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLOAT_TRAIT_T&#32;style);
662 <emphasis role="preprocessor">#endif</emphasis>
663 
664 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_DOUBLE</emphasis>
665 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertDoublesWithin(<emphasis role="keyword">const</emphasis>&#32;UNITY_DOUBLE&#32;delta,
666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DOUBLE&#32;expected,
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DOUBLE&#32;actual,
668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber);
670 
671 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertEqualDoubleArray(UNITY_PTR_ATTRIBUTE&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DOUBLE*&#32;expected,
672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_PTR_ATTRIBUTE&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_DOUBLE*&#32;actual,
673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT32&#32;num_elements,
674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLAGS_T&#32;flags);
677 
678 <emphasis role="keywordtype">void</emphasis>&#32;UnityAssertDoubleSpecial(<emphasis role="keyword">const</emphasis>&#32;UNITY_DOUBLE&#32;actual,
679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;msg,
680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_LINE_TYPE&#32;lineNumber,
681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_FLOAT_TRAIT_T&#32;style);
682 <emphasis role="preprocessor">#endif</emphasis>
683 
684 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
685 <emphasis role="comment">&#32;*&#32;Helpers</emphasis>
686 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
687 
688 UNITY_INTERNAL_PTR&#32;UnityNumToPtr(<emphasis role="keyword">const</emphasis>&#32;UNITY_INT&#32;num,&#32;<emphasis role="keyword">const</emphasis>&#32;UNITY_UINT8&#32;size);
689 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_FLOAT</emphasis>
690 UNITY_INTERNAL_PTR&#32;UnityFloatToPtr(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;num);
691 <emphasis role="preprocessor">#endif</emphasis>
692 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_DOUBLE</emphasis>
693 UNITY_INTERNAL_PTR&#32;UnityDoubleToPtr(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;num);
694 <emphasis role="preprocessor">#endif</emphasis>
695 
696 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
697 <emphasis role="comment">&#32;*&#32;Error&#32;Strings&#32;We&#32;Might&#32;Need</emphasis>
698 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
699 
700 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;UnityStrOk[];
701 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;UnityStrPass[];
702 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;UnityStrFail[];
703 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;UnityStrIgnore[];
704 
705 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;UnityStrErrFloat[];
706 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;UnityStrErrDouble[];
707 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;UnityStrErr64[];
708 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;UnityStrErrShorthand[];
709 
710 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
711 <emphasis role="comment">&#32;*&#32;Test&#32;Running&#32;Macros</emphasis>
712 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
713 
714 <emphasis role="preprocessor">#ifndef&#32;UNITY_EXCLUDE_SETJMP_H</emphasis>
715 <emphasis role="preprocessor">#define&#32;TEST_PROTECT()&#32;(setjmp(Unity.AbortFrame)&#32;==&#32;0)</emphasis>
716 <emphasis role="preprocessor">#define&#32;TEST_ABORT()&#32;longjmp(Unity.AbortFrame,&#32;1)</emphasis>
717 <emphasis role="preprocessor">#else</emphasis>
718 <emphasis role="preprocessor">#define&#32;TEST_PROTECT()&#32;1</emphasis>
719 <emphasis role="preprocessor">#define&#32;TEST_ABORT()&#32;return</emphasis>
720 <emphasis role="preprocessor">#endif</emphasis>
721 
722 <emphasis role="comment">/*&#32;This&#32;tricky&#32;series&#32;of&#32;macros&#32;gives&#32;us&#32;an&#32;optional&#32;line&#32;argument&#32;to&#32;treat&#32;it&#32;as&#32;RUN_TEST(func,&#32;num=__LINE__)&#32;*/</emphasis>
723 <emphasis role="preprocessor">#ifndef&#32;RUN_TEST</emphasis>
724 <emphasis role="preprocessor">#ifdef&#32;__STDC_VERSION__</emphasis>
725 <emphasis role="preprocessor">#if&#32;__STDC_VERSION__&#32;&gt;=&#32;199901L</emphasis>
726 <emphasis role="preprocessor">#define&#32;UNITY_SUPPORT_VARIADIC_MACROS</emphasis>
727 <emphasis role="preprocessor">#endif</emphasis>
728 <emphasis role="preprocessor">#endif</emphasis>
729 <emphasis role="preprocessor">#ifdef&#32;UNITY_SUPPORT_VARIADIC_MACROS</emphasis>
730 <emphasis role="preprocessor">#define&#32;RUN_TEST(...)&#32;RUN_TEST_AT_LINE(__VA_ARGS__,&#32;__LINE__,&#32;throwaway)</emphasis>
731 <emphasis role="preprocessor">#define&#32;RUN_TEST_AT_LINE(func,&#32;line,&#32;...)&#32;UnityDefaultTestRun(func,&#32;#func,&#32;line)</emphasis>
732 <emphasis role="preprocessor">#endif</emphasis>
733 <emphasis role="preprocessor">#endif</emphasis>
734 
735 <emphasis role="comment">/*&#32;If&#32;we&#32;can&apos;t&#32;do&#32;the&#32;tricky&#32;version,&#32;we&apos;ll&#32;just&#32;have&#32;to&#32;require&#32;them&#32;to&#32;always&#32;include&#32;the&#32;line&#32;number&#32;*/</emphasis>
736 <emphasis role="preprocessor">#ifndef&#32;RUN_TEST</emphasis>
737 <emphasis role="preprocessor">#ifdef&#32;CMOCK</emphasis>
738 <emphasis role="preprocessor">#define&#32;RUN_TEST(func,&#32;num)&#32;UnityDefaultTestRun(func,&#32;#func,&#32;num)</emphasis>
739 <emphasis role="preprocessor">#else</emphasis>
740 <emphasis role="preprocessor">#define&#32;RUN_TEST(func)&#32;UnityDefaultTestRun(func,&#32;#func,&#32;__LINE__)</emphasis>
741 <emphasis role="preprocessor">#endif</emphasis>
742 <emphasis role="preprocessor">#endif</emphasis>
743 
744 <emphasis role="preprocessor">#define&#32;TEST_LINE_NUM&#32;(Unity.CurrentTestLineNumber)</emphasis>
745 <emphasis role="preprocessor">#define&#32;TEST_IS_IGNORED&#32;(Unity.CurrentTestIgnored)</emphasis>
746 <emphasis role="preprocessor">#define&#32;UNITY_NEW_TEST(a)&#32;\</emphasis>
747 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;Unity.CurrentTestName&#32;=&#32;(a);&#32;\</emphasis>
748 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;Unity.CurrentTestLineNumber&#32;=&#32;(UNITY_LINE_TYPE)(__LINE__);&#32;\</emphasis>
749 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;Unity.NumberOfTests++;</emphasis>
750 
751 <emphasis role="preprocessor">#ifndef&#32;UNITY_BEGIN</emphasis>
752 <emphasis role="preprocessor">#define&#32;UNITY_BEGIN()&#32;UnityBegin(__FILE__)</emphasis>
753 <emphasis role="preprocessor">#endif</emphasis>
754 
755 <emphasis role="preprocessor">#ifndef&#32;UNITY_END</emphasis>
756 <emphasis role="preprocessor">#define&#32;UNITY_END()&#32;UnityEnd()</emphasis>
757 <emphasis role="preprocessor">#endif</emphasis>
758 
759 <emphasis role="preprocessor">#ifndef&#32;UNITY_SHORTHAND_AS_INT</emphasis>
760 <emphasis role="preprocessor">#ifndef&#32;UNITY_SHORTHAND_AS_MEM</emphasis>
761 <emphasis role="preprocessor">#ifndef&#32;UNITY_SHORTHAND_AS_NONE</emphasis>
762 <emphasis role="preprocessor">#ifndef&#32;UNITY_SHORTHAND_AS_RAW</emphasis>
763 <emphasis role="preprocessor">#define&#32;UNITY_SHORTHAND_AS_OLD</emphasis>
764 <emphasis role="preprocessor">#endif</emphasis>
765 <emphasis role="preprocessor">#endif</emphasis>
766 <emphasis role="preprocessor">#endif</emphasis>
767 <emphasis role="preprocessor">#endif</emphasis>
768 
769 <emphasis role="comment">/*-----------------------------------------------</emphasis>
770 <emphasis role="comment">&#32;*&#32;Command&#32;Line&#32;Argument&#32;Support</emphasis>
771 <emphasis role="comment">&#32;*-----------------------------------------------*/</emphasis>
772 
773 <emphasis role="preprocessor">#ifdef&#32;UNITY_USE_COMMAND_LINE_ARGS</emphasis>
774 <emphasis role="keywordtype">int</emphasis>&#32;UnityParseOptions(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>**&#32;argv);
775 <emphasis role="keywordtype">int</emphasis>&#32;UnityTestMatches(<emphasis role="keywordtype">void</emphasis>);
776 <emphasis role="preprocessor">#endif</emphasis>
777 
778 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
779 <emphasis role="comment">&#32;*&#32;Basic&#32;Fail&#32;and&#32;Ignore</emphasis>
780 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
781 
782 <emphasis role="preprocessor">#define&#32;UNITY_TEST_FAIL(line,&#32;message)&#32;&#32;&#32;UnityFail(&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line))</emphasis>
783 <emphasis role="preprocessor">#define&#32;UNITY_TEST_IGNORE(line,&#32;message)&#32;UnityIgnore(&#32;(message),&#32;(UNITY_LINE_TYPE)(line))</emphasis>
784 
785 <emphasis role="comment">/*-------------------------------------------------------</emphasis>
786 <emphasis role="comment">&#32;*&#32;Test&#32;Asserts</emphasis>
787 <emphasis role="comment">&#32;*-------------------------------------------------------*/</emphasis>
788 
789 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT(condition,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;do&#32;{if&#32;(condition)&#32;{}&#32;else&#32;{UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;(message));}}&#32;while(0)</emphasis>
790 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NULL(pointer,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_ASSERT(((pointer)&#32;==&#32;NULL),&#32;&#32;(UNITY_LINE_TYPE)(line),&#32;(message))</emphasis>
791 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_NULL(pointer,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_ASSERT(((pointer)&#32;!=&#32;NULL),&#32;&#32;(UNITY_LINE_TYPE)(line),&#32;(message))</emphasis>
792 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EMPTY(pointer,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_ASSERT(((pointer[0])&#32;==&#32;0),&#32;&#32;(UNITY_LINE_TYPE)(line),&#32;(message))</emphasis>
793 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EMPTY(pointer,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_ASSERT(((pointer[0])&#32;!=&#32;0),&#32;&#32;(UNITY_LINE_TYPE)(line),&#32;(message))</emphasis>
794 
795 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT)</emphasis>
796 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT8(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(expected),&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8)</emphasis>
797 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT16(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_INT16)(expected),&#32;(UNITY_INT)(UNITY_INT16)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16)</emphasis>
798 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT32(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_INT32)(expected),&#32;(UNITY_INT)(UNITY_INT32)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32)</emphasis>
799 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT)</emphasis>
800 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT8(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(expected),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8)</emphasis>
801 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT16(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT16)(expected),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16)</emphasis>
802 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT32(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT32)(expected),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32)</emphasis>
803 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX8(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(expected),&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8)</emphasis>
804 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX16(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_INT16)(expected),&#32;(UNITY_INT)(UNITY_INT16)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16)</emphasis>
805 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX32(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_INT32)(expected),&#32;(UNITY_INT)(UNITY_INT32)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32)</emphasis>
806 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_CHAR(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(expected),&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR)</emphasis>
807 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_BITS(mask,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertBits((UNITY_INT)(mask),&#32;(UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line))</emphasis>
808 
809 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_INT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INT)(actual),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT)</emphasis>
810 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_INT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(threshold),&#32;&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8)</emphasis>
811 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_INT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),&#32;&#32;(UNITY_INT)(UNITY_INT16)(actual),&#32;&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16)</emphasis>
812 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_INT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),&#32;&#32;(UNITY_INT)(UNITY_INT32)(actual),&#32;&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32)</emphasis>
813 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_UINT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INT)(actual),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT)</emphasis>
814 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_UINT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8)</emphasis>
815 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_UINT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16)</emphasis>
816 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_UINT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32)</emphasis>
817 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_HEX8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8)</emphasis>
818 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_HEX16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16)</emphasis>
819 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_HEX32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32)</emphasis>
820 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_CHAR(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(threshold),&#32;&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;&#32;UNITY_NOT_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR)</emphasis>
821 
822 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_INT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INT)(actual),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT)</emphasis>
823 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_INT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8)</emphasis>
824 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_INT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),&#32;(UNITY_INT)(UNITY_INT16)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16)</emphasis>
825 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_INT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),&#32;(UNITY_INT)(UNITY_INT32)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32)</emphasis>
826 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_UINT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INT)(actual),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT)</emphasis>
827 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_UINT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8)</emphasis>
828 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_UINT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16)</emphasis>
829 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_UINT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32)</emphasis>
830 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_HEX8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8)</emphasis>
831 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_HEX16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16)</emphasis>
832 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_HEX32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32)</emphasis>
833 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_CHAR(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;UNITY_GREATER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR)</emphasis>
834 
835 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_INT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INT)(actual),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT)</emphasis>
836 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_INT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8)</emphasis>
837 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_INT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),&#32;(UNITY_INT)(UNITY_INT16)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16)</emphasis>
838 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_INT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),&#32;(UNITY_INT)(UNITY_INT32)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32)</emphasis>
839 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_UINT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INT)(actual),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT)</emphasis>
840 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_UINT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8)</emphasis>
841 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_UINT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16)</emphasis>
842 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_UINT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32)</emphasis>
843 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_HEX8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8)</emphasis>
844 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_HEX16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16)</emphasis>
845 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_HEX32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32)</emphasis>
846 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_CHAR(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_INT8&#32;)(actual),&#32;UNITY_SMALLER_THAN,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR)</emphasis>
847 
848 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(threshold),&#32;(UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT)</emphasis>
849 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)&#32;(threshold),&#32;(UNITY_INT)(UNITY_INT8&#32;)&#32;(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8)</emphasis>
850 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)&#32;(threshold),&#32;(UNITY_INT)(UNITY_INT16)&#32;(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16)</emphasis>
851 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)&#32;(threshold),&#32;(UNITY_INT)(UNITY_INT32)&#32;(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32)</emphasis>
852 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(threshold),&#32;(UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT)</emphasis>
853 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8)</emphasis>
854 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16)</emphasis>
855 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32)</emphasis>
856 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8)</emphasis>
857 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16)</emphasis>
858 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32)</emphasis>
859 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_CHAR(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)&#32;(threshold),&#32;(UNITY_INT)(UNITY_INT8&#32;)&#32;(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR)</emphasis>
860 
861 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(threshold),&#32;&#32;(UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT)</emphasis>
862 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(threshold),&#32;&#32;(UNITY_INT)(UNITY_INT8&#32;)&#32;(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8)</emphasis>
863 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),&#32;&#32;(UNITY_INT)(UNITY_INT16)&#32;(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16)</emphasis>
864 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),&#32;&#32;(UNITY_INT)(UNITY_INT32)&#32;(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32)</emphasis>
865 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(threshold),&#32;&#32;(UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT)</emphasis>
866 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8)</emphasis>
867 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16)</emphasis>
868 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32)</emphasis>
869 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX8(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8&#32;)(threshold),&#32;(UNITY_INT)(UNITY_UINT8&#32;)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8)</emphasis>
870 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX16(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),&#32;(UNITY_INT)(UNITY_UINT16)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16)</emphasis>
871 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX32(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),&#32;(UNITY_INT)(UNITY_UINT32)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32)</emphasis>
872 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_CHAR(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8&#32;)(threshold),&#32;&#32;(UNITY_INT)(UNITY_INT8&#32;)&#32;(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR)</emphasis>
873 
874 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(delta),&#32;(UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT)</emphasis>
875 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT8_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT8&#32;)(delta),&#32;(UNITY_INT)(UNITY_INT8&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_INT)(UNITY_INT8&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8)</emphasis>
876 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT16_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT16)(delta),&#32;(UNITY_INT)(UNITY_INT16)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_INT)(UNITY_INT16)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16)</emphasis>
877 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT32_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT32)(delta),&#32;(UNITY_INT)(UNITY_INT32)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_INT)(UNITY_INT32)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32)</emphasis>
878 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(delta),&#32;(UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT)</emphasis>
879 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT8_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT8&#32;)(delta),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT8&#32;)(expected),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT8&#32;)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8)</emphasis>
880 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT16_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT16)(delta),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(expected),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16)</emphasis>
881 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT32_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT32)(delta),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(expected),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32)</emphasis>
882 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX8_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT8&#32;)(delta),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT8&#32;)(expected),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT8&#32;)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8)</emphasis>
883 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX16_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT16)(delta),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(expected),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16)</emphasis>
884 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX32_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT32)(delta),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(expected),&#32;(UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32)</emphasis>
885 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_CHAR_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((UNITY_UINT8&#32;)(delta),&#32;(UNITY_INT)(UNITY_INT8&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_INT)(UNITY_INT8&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR)</emphasis>
886 
887 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersArrayWithin(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
888 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT8_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT8&#32;)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
889 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT16_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
890 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT32_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
891 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;UnityAssertNumbersArrayWithin(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
892 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT8_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
893 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT16_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
894 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT32_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
895 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX8_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT8&#32;)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
896 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX16_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
897 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX32_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
898 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_CHAR_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT8&#32;)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;((UNITY_UINT32)(num_elements)),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
899 
900 
901 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_PTR(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_PTR_TO_INT)(expected),&#32;(UNITY_PTR_TO_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_POINTER)</emphasis>
902 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_STRING(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualString((const&#32;char*)(expected),&#32;(const&#32;char*)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line))</emphasis>
903 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_STRING_LEN(expected,&#32;actual,&#32;len,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualStringLen((const&#32;char*)(expected),&#32;(const&#32;char*)(actual),&#32;(UNITY_UINT32)(len),&#32;(message),&#32;(UNITY_LINE_TYPE)(line))</emphasis>
904 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_MEMORY(expected,&#32;actual,&#32;len,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(len),&#32;1,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
905 
906 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT,&#32;&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
907 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT8_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8,&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
908 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT16_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16,&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
909 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT32_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32,&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
910 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT,&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
911 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT8_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8,&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
912 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT16_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16,&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
913 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT32_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32,&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
914 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX8_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8,&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
915 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX16_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16,&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
916 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX32_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32,&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
917 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_PTR_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_POINTER,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
918 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_STRING_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualStringArray((UNITY_INTERNAL_PTR)(expected),&#32;(const&#32;char**)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
919 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_MEMORY_ARRAY(expected,&#32;actual,&#32;len,&#32;num_elements,&#32;line,&#32;message)&#32;UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(len),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
920 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_CHAR_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR,&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
921 
922 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_INT(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_INT_WIDTH&#32;/&#32;8)),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT,&#32;&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
923 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_INT8(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8&#32;&#32;)(expected),&#32;1),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT8,&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
924 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_INT16(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT16&#32;)(expected),&#32;2),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT16,&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
925 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_INT32(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT32&#32;)(expected),&#32;4),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT32,&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
926 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_UINT(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_INT_WIDTH&#32;/&#32;8)),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT,&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
927 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_UINT8(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT8&#32;)(expected),&#32;1),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT8,&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
928 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_UINT16(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT16)(expected),&#32;2),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT16,&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
929 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_UINT32(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT32)(expected),&#32;4),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT32,&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
930 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_HEX8(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8&#32;&#32;)(expected),&#32;1),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX8,&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
931 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_HEX16(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT16&#32;)(expected),&#32;2),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX16,&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
932 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_HEX32(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT32&#32;)(expected),&#32;4),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX32,&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
933 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_PTR(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_PTR_TO_INT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;(expected),&#32;(UNITY_POINTER_WIDTH&#32;/&#32;8)),&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_POINTER,&#32;UNITY_ARRAY_TO_VAL)</emphasis>
934 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_STRING(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualStringArray((UNITY_INTERNAL_PTR)(expected),&#32;(const&#32;char**)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_VAL)</emphasis>
935 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_MEMORY(expected,&#32;actual,&#32;len,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(len),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_VAL)</emphasis>
936 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_CHAR(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8&#32;&#32;)(expected),&#32;1),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_CHAR,&#32;&#32;&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
937 
938 <emphasis role="preprocessor">#ifdef&#32;UNITY_SUPPORT_64</emphasis>
939 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT64(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64)</emphasis>
940 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT64(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64)</emphasis>
941 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX64(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualNumber((UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64)</emphasis>
942 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64,&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
943 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
944 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64,&#32;&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
945 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_INT64(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT64)(expected),&#32;8),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64,&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
946 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_UINT64(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT64)(expected),&#32;8),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64,&#32;UNITY_ARRAY_TO_VAL)</emphasis>
947 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_HEX64(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT64)(expected),&#32;8),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64,&#32;&#32;UNITY_ARRAY_TO_VAL)</emphasis>
948 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT64_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((delta),&#32;(UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64)</emphasis>
949 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT64_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((delta),&#32;(UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64)</emphasis>
950 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX64_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertNumbersWithin((delta),&#32;(UNITY_INT)(expected),&#32;(UNITY_INT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64)</emphasis>
951 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_NOT_EQUAL,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64)</emphasis>
952 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_NOT_EQUAL,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64)</emphasis>
953 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_NOT_EQUAL_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_NOT_EQUAL,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64)</emphasis>
954 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_GREATER_THAN,&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64)</emphasis>
955 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_GREATER_THAN,&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64)</emphasis>
956 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_GREATER_THAN,&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64)</emphasis>
957 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64)</emphasis>
958 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64)</emphasis>
959 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_GREATER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64)</emphasis>
960 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_SMALLER_THAN,&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64)</emphasis>
961 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_SMALLER_THAN,&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64)</emphasis>
962 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_SMALLER_THAN,&#32;&#32;&#32;&#32;&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64)</emphasis>
963 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64)</emphasis>
964 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64)</emphasis>
965 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),&#32;(UNITY_INT)(actual),&#32;UNITY_SMALLER_OR_EQUAL,&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64)</emphasis>
966 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT64)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_INT64,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
967 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT64)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_UINT64,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
968 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UnityAssertNumbersArrayWithin((UNITY_UINT64)(delta),&#32;(UNITY_INTERNAL_PTR)(expected),&#32;(UNITY_INTERNAL_PTR)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_DISPLAY_STYLE_HEX64,&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
969 <emphasis role="preprocessor">#else</emphasis>
970 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT64(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
971 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT64(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
972 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX64(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
973 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
974 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
975 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
976 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT64_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
977 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT64_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
978 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX64_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
979 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
980 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
981 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_THAN_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
982 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
983 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
984 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
985 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
986 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
987 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_THAN_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
988 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
989 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
990 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64(threshold,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
991 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
992 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
993 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN(delta,&#32;expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErr64)</emphasis>
994 <emphasis role="preprocessor">#endif</emphasis>
995 
996 <emphasis role="preprocessor">#ifdef&#32;UNITY_EXCLUDE_FLOAT</emphasis>
997 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
998 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_FLOAT(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
999 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1000 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1001 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1002 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1003 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NAN(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1004 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1005 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1006 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1007 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1008 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrFloat)</emphasis>
1009 <emphasis role="preprocessor">#else</emphasis>
1010 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatsWithin((UNITY_FLOAT)(delta),&#32;(UNITY_FLOAT)(expected),&#32;(UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line))</emphasis>
1011 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_FLOAT(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_ASSERT_FLOAT_WITHIN((UNITY_FLOAT)(expected)&#32;*&#32;(UNITY_FLOAT)UNITY_FLOAT_PRECISION,&#32;(UNITY_FLOAT)(expected),&#32;(UNITY_FLOAT)(actual),&#32;(UNITY_LINE_TYPE)(line),&#32;(message))</emphasis>
1012 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualFloatArray((UNITY_FLOAT*)(expected),&#32;(UNITY_FLOAT*)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
1013 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualFloatArray(UnityFloatToPtr(expected),&#32;(UNITY_FLOAT*)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_VAL)</emphasis>
1014 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatSpecial((UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_INF)</emphasis>
1015 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatSpecial((UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NEG_INF)</emphasis>
1016 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NAN(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatSpecial((UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NAN)</emphasis>
1017 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatSpecial((UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_DET)</emphasis>
1018 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatSpecial((UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NOT_INF)</emphasis>
1019 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatSpecial((UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NOT_NEG_INF)</emphasis>
1020 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatSpecial((UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NOT_NAN)</emphasis>
1021 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertFloatSpecial((UNITY_FLOAT)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NOT_DET)</emphasis>
1022 <emphasis role="preprocessor">#endif</emphasis>
1023 
1024 <emphasis role="preprocessor">#ifdef&#32;UNITY_EXCLUDE_DOUBLE</emphasis>
1025 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1026 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_DOUBLE(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1027 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1028 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1029 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1030 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1031 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NAN(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1032 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1033 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1034 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1035 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1036 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),&#32;UnityStrErrDouble)</emphasis>
1037 <emphasis role="preprocessor">#else</emphasis>
1038 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_WITHIN(delta,&#32;expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoublesWithin((UNITY_DOUBLE)(delta),&#32;(UNITY_DOUBLE)(expected),&#32;(UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line))</emphasis>
1039 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_DOUBLE(expected,&#32;actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UNITY_TEST_ASSERT_DOUBLE_WITHIN((UNITY_DOUBLE)(expected)&#32;*&#32;(UNITY_DOUBLE)UNITY_DOUBLE_PRECISION,&#32;(UNITY_DOUBLE)(expected),&#32;(UNITY_DOUBLE)(actual),&#32;(UNITY_LINE_TYPE)(line),&#32;(message))</emphasis>
1040 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualDoubleArray((UNITY_DOUBLE*)(expected),&#32;(UNITY_DOUBLE*)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_ARRAY)</emphasis>
1041 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE(expected,&#32;actual,&#32;num_elements,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertEqualDoubleArray(UnityDoubleToPtr(expected),&#32;(UNITY_DOUBLE*)(actual),&#32;(UNITY_UINT32)(num_elements),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_ARRAY_TO_VAL)</emphasis>
1042 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_INF)</emphasis>
1043 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NEG_INF)</emphasis>
1044 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NAN(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NAN)</emphasis>
1045 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_DET)</emphasis>
1046 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NOT_INF)</emphasis>
1047 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NOT_NEG_INF)</emphasis>
1048 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NOT_NAN)</emphasis>
1049 <emphasis role="preprocessor">#define&#32;UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE(actual,&#32;line,&#32;message)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),&#32;(message),&#32;(UNITY_LINE_TYPE)(line),&#32;UNITY_FLOAT_IS_NOT_DET)</emphasis>
1050 <emphasis role="preprocessor">#endif</emphasis>
1051 
1052 <emphasis role="comment">/*&#32;End&#32;of&#32;UNITY_INTERNALS_H&#32;*/</emphasis>
1053 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
